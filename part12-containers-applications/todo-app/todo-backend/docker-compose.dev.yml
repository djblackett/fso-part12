version: '3.8'
services:
  app:                    # The name of the service, can be anything
    container_name: server
    depends_on:
      - redis
      - mongo
    image: express-server # Declares which image to use
    build:
      context: .              # Declares where to build if image is not found
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    ports:                # Declares the ports to publish
      - "3000:3000"
    environment:
          - REDIS_URL=redis://redis:6379
          - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database?directConnection=true
          - PORT=3000
    # volumes:
    # - ./:/usr/src/app



  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "27017:27017"

    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./mongo/mongo-init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db

  redis:
    container_name: "redis"
    image: redis
    ports:
      - "6379:6379"
    command: [ 'redis-server', '--appendonly', 'yes' ] # Overwrite the CMD
    volumes: # Declare the volume
      - ./redis_data:/data
      # - ./redis.conf:/temp/redis.conf
  debug-helper:
    image: busybox




volumes:
  mongo_data:
